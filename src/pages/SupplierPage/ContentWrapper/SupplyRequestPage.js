import React, { useState, useEffect } from "react";
import { AiFillEdit } from "react-icons/ai";
import { FiRefreshCw } from "react-icons/fi";
import Shop from "../../../assets/NewProject/Icon-GreenSupply/shop-illustration.webp";
import { toast } from "react-toastify";
import { createSupplyRequest } from "../../../services/SupplyRequestService";

const SupplyRequestPage = () => {
  return (
    <div className="px-2">
      {/* Gi·ªõi thi·ªáu */}
      <div className="w-full border border-gray-200 flex flex-col md:flex-row items-center gap-10 md:gap-16 lg:gap-20 mb-5 justify-between rounded-md p-6 bg-white shadow">
        <div className="info md:text-left max-w-xl">
          <h3 className="text-2xl md:text-3xl font-bold mb-3 text-black">
            Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi{" "}
            <span className="text-[#006838]">Green Supply</span>üåø
          </h3>
          <p className="text-gray-700">
            H√£y b·∫Øt ƒë·∫ßu b·∫±ng c√°ch{" "}
            <span className="font-bold"> t·∫°o ƒë∆°n cung c·∫•p h√†ng </span> cho ch√∫ng
            t√¥i. Sau khi g·ª≠i y√™u c·∫ßu, b·∫°n c√≥ th·ªÉ theo d√µi tr·∫°ng th√°i x·ª≠ l√Ω v√†
            nh·∫≠n ph·∫£n h·ªìi nhanh ch√≥ng t·ª´ h·ªá th·ªëng c·ªßa ch√∫ng t√¥i.
          </p>
          <p className="text-gray-700 mt-3">
            Ch√∫ng t√¥i mong mu·ªën x√¢y d·ª±ng m·ªôt m·ªëi quan h·ªá h·ª£p t√°c b·ªÅn v·ªØng v√†
            c√πng nhau ph√°t tri·ªÉn!
          </p>
        </div>
        <img
          src={Shop}
          className="w-[180px] md:w-[220px] lg:w-[250px] object-contain"
          alt="Shop Illustration"
        />
      </div>

      {/* Form T·∫°o Y√™u C·∫ßu Thu H√†ng */}
      <div className="w-full border border-gray-200 p-6 rounded-md bg-white shadow">
        <h2 className="text-xl font-[800] mb-4 text-black flex items-center gap-3">
          <AiFillEdit />
          T·∫°o ƒê∆°n Cung C·∫•p H√†ng
        </h2>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
          {/* fuel_name */}
          {/* <div>
            <label className="block mb-1 font-semibold">T√™n m·∫∑t h√†ng</label>
            <input
              type="text"
              name="fuel_name"
              maxLength="50"
              placeholder="T√™n m·∫∑t h√†ng..."
              value={formData.fuel_name}
              onChange={handleChange}
              onKeyDown={(e) => {
                if (!/^[a-zA-Z0-9\s\u00C0-\u1EF9]*$/.test(e.key)) {
                  e.preventDefault();
                }
              }}
              className="border p-2 rounded w-full mb-2"
            />
            {errors.fuel_name && (
              <p className="text-red-500 text-sm">{errors.fuel_name}</p>
            )}
          </div> */}

          {/* quantity */}
          {/* <div>
            <label className="block mb-1 font-semibold">S·ªë l∆∞·ª£ng (kg )</label>
            <input
              type="number"
              name="quantity"
              min="1"
              placeholder="S·ªë l∆∞·ª£ng..."
              value={formData.quantity}
              onChange={handleChange}
              onKeyDown={(e) => {
                if (["e", "E", "-", "+", "."].includes(e.key)) {
                  e.preventDefault();
                }
              }}
              className="border p-2 rounded w-full mb-2"
            />
            {errors.quantity && (
              <p className="text-red-500 text-sm">{errors.quantity}</p>
            )}
          </div> */}

          {/* price */}
          {/* <div>
            <label className="block mb-1 font-semibold">
              Gi√° m·ªói ƒë∆°n v·ªã (VNƒê)
            </label>
            <input
              type="number"
              name="price"
              min="1"
              placeholder="Gi√° b√°n..."
              value={formData.price}
              onChange={handleChange}
              onKeyDown={(e) => {
                if (["e", "E", "-", "+", "."].includes(e.key)) {
                  e.preventDefault();
                }
              }}
              className="border p-2 rounded w-full mb-2"
            />
            {errors.price && (
              <p className="text-red-500 text-sm">{errors.price}</p>
            )}
          </div> */}

          {/* address */}
          {/* <div>
            <label className="block mb-1 font-semibold">ƒê·ªãa ch·ªâ l·∫•y h√†ng</label>
            <input
              type="text"
              name="address"
              maxLength="120"
              placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ..."
              value={formData.address}
              onChange={handleChange}
              className="border p-2 rounded w-full mb-2"
            />
            {errors.address && (
              <p className="text-red-500 text-sm">{errors.address}</p>
            )}
          </div> */}
        </div>

        {/* Hi·ªÉn th·ªã total_price */}
        {/* <div className="mt-4 mb-4">
          <p>
            <span className="font-semibold mr-2">T·ªïng gi√°:</span>
            {totalPrice().toLocaleString("vi-VN")} VNƒê
          </p>
        </div> */}

        {/* note */}
        {/* <div className="mb-4">
          <label className="block mb-1 font-semibold">Ghi ch√∫</label>
          <textarea
            name="note"
            maxLength="200"
            placeholder="Ghi ch√∫ (t·ªëi ƒëa 200 k√Ω t·ª±)"
            value={formData.note}
            onChange={handleChange}
            className="w-full border p-2 rounded"
          />
        </div> */}

        {/* N√∫t b·∫•m */}
        {/* <div className="flex flex-col md:flex-row md:justify-between gap-4 mt-4">
          <button
            onClick={handleSubmit}
            className="bg-[#FFE814] text-[#F14A00] font-bold px-4 py-2 rounded hover:bg-[#FBC02D] w-full md:w-auto"
          >
            G·ª≠i Y√™u C·∫ßu
          </button>
          <button
            onClick={() =>
              setFormData({
                fuel_name: "",
                quantity: "",
                price: "",
                address: "",
                note: "",
              })
            }
            className="bg-[#006838] flex items-center text-white font-bold px-3 py-2 rounded hover:bg-[#028A48] w-full md:w-auto gap-2"
          >
            <FiRefreshCw />
            L√†m m·ªõi
          </button>
        </div> */}
      </div>
    </div>
  );
};

export default SupplyRequestPage;
